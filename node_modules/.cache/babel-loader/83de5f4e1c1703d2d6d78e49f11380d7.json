{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bajelnazarov/Documents/VSCode/projects/auth6/ReactProjects/src/redux/actions/AuthAction.js\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { Modal } from \"../../modal\";\nconst AuthActionType = {\n  REGISTER_SUCCESS: \"REGISTER_SUCCESS\",\n  REGISTER_FAIL: \"REGISTER_FAIL\",\n  LOGOUT_SUCCESS: \"LOGOUT_SUCCESS\",\n  LOGOUT_FAIL: \"LOGOUT_FAIL\",\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n  LOGIN_FAIL: \"LOGIN_FAIL\"\n};\n\nconst RegisterAuthAction = (userState, history, setErrorHandler) => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(\"/signup\", userState);\n      const {\n        data\n      } = res;\n      dispatch({\n        type: AuthActionType.REGISTER_SUCCESS,\n        payload: data\n      });\n      history.push(\"/\");\n\n      /*#__PURE__*/\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModal(true),\n          children: \"Click Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isVisible: isModal,\n          title: \"Modal Title\",\n          content: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Add your content here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 18\n          }, this),\n          footer: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this),\n          onClose: () => setModal(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true);\n    } catch (error) {\n      if (error.response) {\n        dispatch({\n          type: AuthActionType.REGISTER_FAIL,\n          payload: error.response.data.message\n        });\n        setErrorHandler({\n          hasError: true,\n          message: error.response.data.message\n        });\n      }\n    }\n  };\n};\n\n_c = RegisterAuthAction;\n\nconst LoginAuthAction = (loginState, history, setErrorHandler) => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(\"/signin\", loginState);\n      const {\n        data\n      } = res;\n      dispatch({\n        type: AuthActionType.LOGIN_SUCCESS,\n        payload: data\n      });\n      history.push(\"/\");\n    } catch (error) {\n      if (error.response) {\n        dispatch({\n          type: AuthActionType.LOGIN_FAIL,\n          payload: error.response.data.message\n        });\n      }\n\n      setErrorHandler({\n        hasError: true,\n        message: error.response.data.message\n      });\n    }\n  };\n};\n\n_c2 = LoginAuthAction;\n\nconst LogOutAuthAction = history => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(\"/logout\");\n      const {\n        data\n      } = res;\n      dispatch({\n        type: AuthActionType.LOGOUT_SUCCESS,\n        payload: data.message\n      });\n      history.push(\"/\");\n    } catch (error) {\n      if (error.response) {\n        dispatch({\n          type: AuthActionType.LOGOUT_FAIL,\n          payload: error.response.data.message\n        });\n      }\n    }\n  };\n};\n\n_c3 = LogOutAuthAction;\nexport { RegisterAuthAction, AuthActionType, LogOutAuthAction, LoginAuthAction };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RegisterAuthAction\");\n$RefreshReg$(_c2, \"LoginAuthAction\");\n$RefreshReg$(_c3, \"LogOutAuthAction\");","map":{"version":3,"sources":["/Users/bajelnazarov/Documents/VSCode/projects/auth6/ReactProjects/src/redux/actions/AuthAction.js"],"names":["axios","useState","Modal","AuthActionType","REGISTER_SUCCESS","REGISTER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","RegisterAuthAction","userState","history","setErrorHandler","dispatch","res","post","data","type","payload","push","setModal","isModal","error","response","message","hasError","LoginAuthAction","loginState","LogOutAuthAction","get"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport {Modal} from \"../../modal\"\n\nconst AuthActionType = {\n  REGISTER_SUCCESS: \"REGISTER_SUCCESS\",\n  REGISTER_FAIL: \"REGISTER_FAIL\",\n  LOGOUT_SUCCESS: \"LOGOUT_SUCCESS\",\n  LOGOUT_FAIL: \"LOGOUT_FAIL\",\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n  LOGIN_FAIL: \"LOGIN_FAIL\",\n};\n\nconst RegisterAuthAction = (userState, history, setErrorHandler) => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.post(\"/signup\", userState);\n      const { data } = res;\n      dispatch({ type: AuthActionType.REGISTER_SUCCESS, payload: data });\n      history.push(\"/\");\n      <>\n      <button onClick={() => setModal(true)}>Click Here</button>\n      <Modal\n\n        isVisible={isModal}\n        title=\"Modal Title\"\n        content={<p>Add your content here</p>}\n        footer={<button>Cancel</button>}\n        onClose={() => setModal(false)}\n      />\n    </>\n    } catch (error) {\n      if (error.response) {\n        dispatch({\n          type: AuthActionType.REGISTER_FAIL,\n          payload: error.response.data.message,\n        });\n        setErrorHandler({\n          hasError: true,\n          message: error.response.data.message,\n        });\n      }\n    }\n  };\n};\n\nconst LoginAuthAction = (loginState, history, setErrorHandler) => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.post(\"/signin\", loginState);\n      const { data } = res;\n      dispatch({ type: AuthActionType.LOGIN_SUCCESS, payload: data });\n      history.push(\"/\");\n    } catch (error) {\n      if (error.response) {\n        dispatch({\n          type: AuthActionType.LOGIN_FAIL,\n          payload: error.response.data.message,\n        });\n      }\n      setErrorHandler({ hasError: true, message: error.response.data.message });\n    }\n  };\n};\n\nconst LogOutAuthAction = (history) => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.get(\"/logout\");\n      const { data } = res;\n      dispatch({\n        type: AuthActionType.LOGOUT_SUCCESS,\n        payload: data.message,\n      });\n      history.push(\"/\");\n    } catch (error) {\n      if (error.response) {\n        dispatch({\n          type: AuthActionType.LOGOUT_FAIL,\n          payload: error.response.data.message,\n        });\n      }\n    }\n  };\n};\n\nexport {\n  RegisterAuthAction,\n  AuthActionType,\n  LogOutAuthAction,\n  LoginAuthAction,\n};\n"]},"metadata":{},"sourceType":"module"}