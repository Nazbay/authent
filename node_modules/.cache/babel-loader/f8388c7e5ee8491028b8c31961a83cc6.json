{"ast":null,"code":"import axios from \"axios\";\nimport { AuthActionType } from \"../actions/AuthAction\";\nconst authState = {\n  isLoggedIn: false,\n  user: {\n    name: \"\",\n    expires_at: \"\",\n    jwttoken: \"\",\n    authorities: []\n  }\n};\n\nconst getAuthState = () => {\n  const auth = localStorage.getItem(\"auth\");\n\n  try {\n    const authobj = JSON.parse(auth);\n    const {\n      expires_at,\n      jwttoken\n    } = authobj.user;\n\n    if (new Date(expires_at) > new Date()) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${jwttoken}`;\n      return authobj;\n    }\n\n    return authState;\n  } catch (error) {\n    return authState;\n  }\n};\n\nconst newAuth = getAuthState();\n\nconst authreducer = (state = newAuth, action) => {\n  switch (action.type) {\n    case AuthActionType.REGISTER_SUCCESS:\n      const newAuthState = {\n        isLoggedIn: true,\n        user: action.payload\n      };\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${action.payload.jwttoken}`;\n      localStorage.setItem(\"auth\", JSON.stringify(newAuthState));\n      return newAuthState;\n\n    case AuthActionType.LOGOUT_SUCCESS:\n      localStorage.removeItem(\"auth\");\n      return authState;\n\n    case AuthActionType.LOGIN_SUCCESS:\n      const loginAuthState = {\n        isLoggedIn: true,\n        user: action.payload\n      };\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${action.payload.jwttoken}`;\n      localStorage.setItem(\"auth\", JSON.stringify(loginAuthState));\n      return loginAuthState;\n\n    default:\n      return state;\n  }\n};\n\nexport default authreducer;","map":{"version":3,"sources":["/Users/bajelnazarov/Documents/VSCode/projects/auth/main/src/redux/reducers/AuthReducer.js"],"names":["axios","AuthActionType","authState","isLoggedIn","user","name","expires_at","jwttoken","authorities","getAuthState","auth","localStorage","getItem","authobj","JSON","parse","Date","defaults","headers","common","error","newAuth","authreducer","state","action","type","REGISTER_SUCCESS","newAuthState","payload","setItem","stringify","LOGOUT_SUCCESS","removeItem","LOGIN_SUCCESS","loginAuthState"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE,KADI;AAEhBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,EADF;AAEJC,IAAAA,UAAU,EAAE,EAFR;AAGJC,IAAAA,QAAQ,EAAE,EAHN;AAIJC,IAAAA,WAAW,EAAE;AAJT;AAFU,CAAlB;;AASA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;;AACA,MAAI;AACF,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAhB;AACA,UAAM;AAAEJ,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA2BM,OAAO,CAACT,IAAzC;;AACA,QAAI,IAAIY,IAAJ,CAASV,UAAT,IAAuB,IAAIU,IAAJ,EAA3B,EAAuC;AACrChB,MAAAA,KAAK,CAACiB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,UAASZ,QAAS,EAApE;AACA,aAAOM,OAAP;AACD;;AACD,WAAOX,SAAP;AACD,GARD,CAQE,OAAOkB,KAAP,EAAc;AACd,WAAOlB,SAAP;AACD;AACF,CAbD;;AAcA,MAAMmB,OAAO,GAAGZ,YAAY,EAA5B;;AACA,MAAMa,WAAW,GAAG,CAACC,KAAK,GAAGF,OAAT,EAAkBG,MAAlB,KAA6B;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKxB,cAAc,CAACyB,gBAApB;AACE,YAAMC,YAAY,GAAG;AACnBxB,QAAAA,UAAU,EAAE,IADO;AAEnBC,QAAAA,IAAI,EAAEoB,MAAM,CAACI;AAFM,OAArB;AAIA5B,MAAAA,KAAK,CAACiB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CACE,eADF,IAEK,UAASK,MAAM,CAACI,OAAP,CAAerB,QAAS,EAFtC;AAGAI,MAAAA,YAAY,CAACkB,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeH,YAAf,CAA7B;AACA,aAAOA,YAAP;;AAEF,SAAK1B,cAAc,CAAC8B,cAApB;AACEpB,MAAAA,YAAY,CAACqB,UAAb,CAAwB,MAAxB;AACA,aAAO9B,SAAP;;AAEF,SAAKD,cAAc,CAACgC,aAApB;AACE,YAAMC,cAAc,GAAG;AACrB/B,QAAAA,UAAU,EAAE,IADS;AAErBC,QAAAA,IAAI,EAAEoB,MAAM,CAACI;AAFQ,OAAvB;AAIA5B,MAAAA,KAAK,CAACiB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CACE,eADF,IAEK,UAASK,MAAM,CAACI,OAAP,CAAerB,QAAS,EAFtC;AAGAI,MAAAA,YAAY,CAACkB,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeI,cAAf,CAA7B;AACA,aAAOA,cAAP;;AAEF;AACE,aAAOX,KAAP;AA5BJ;AA8BD,CA/BD;;AAiCA,eAAeD,WAAf","sourcesContent":["import axios from \"axios\";\nimport { AuthActionType } from \"../actions/AuthAction\";\n\nconst authState = {\n  isLoggedIn: false,\n  user: {\n    name: \"\",\n    expires_at: \"\",\n    jwttoken: \"\",\n    authorities: [],\n  },\n};\nconst getAuthState = () => {\n  const auth = localStorage.getItem(\"auth\");\n  try {\n    const authobj = JSON.parse(auth);\n    const { expires_at, jwttoken } = authobj.user;\n    if (new Date(expires_at) > new Date()) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${jwttoken}`;\n      return authobj;\n    }\n    return authState;\n  } catch (error) {\n    return authState;\n  }\n};\nconst newAuth = getAuthState();\nconst authreducer = (state = newAuth, action) => {\n  switch (action.type) {\n    case AuthActionType.REGISTER_SUCCESS:\n      const newAuthState = {\n        isLoggedIn: true,\n        user: action.payload,\n      };\n      axios.defaults.headers.common[\n        \"Authorization\"\n      ] = `Bearer ${action.payload.jwttoken}`;\n      localStorage.setItem(\"auth\", JSON.stringify(newAuthState));\n      return newAuthState;\n\n    case AuthActionType.LOGOUT_SUCCESS:\n      localStorage.removeItem(\"auth\");\n      return authState;\n\n    case AuthActionType.LOGIN_SUCCESS:\n      const loginAuthState = {\n        isLoggedIn: true,\n        user: action.payload,\n      };\n      axios.defaults.headers.common[\n        \"Authorization\"\n      ] = `Bearer ${action.payload.jwttoken}`;\n      localStorage.setItem(\"auth\", JSON.stringify(loginAuthState));\n      return loginAuthState;\n\n    default:\n      return state;\n  }\n};\n\nexport default authreducer;\n"]},"metadata":{},"sourceType":"module"}